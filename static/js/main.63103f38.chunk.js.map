{"version":3,"sources":["redux/solver/solverReducer.js","redux/store.js","components/Home.js","components/encrypt/Encrypt.js","components/decrypt/Decrypt.js","App.js","serviceWorker.js","index.js","utils/encryptionUtils.js","utils/stringUtils.js"],"names":["INITIAL_STATE","encodedText","letterMappings","reducer","combineReducers","solver","state","action","type","createStore","Home","style","styles","title","to","buttonContainer","Button","variant","color","button","textDecoration","margin","width","fontSize","padding","Encrypt","shortLetterCount","encryptionTypes","shift","name","strategy","encryptionUtils","description","shiftHalf","random","randomize","handleWindowSizeChange","setState","window","innerWidth","originalText","selectedEncryption","addEventListener","this","removeEventListener","event","target","value","encryptedText","isEmpty","length","isShort","stringUtils","getLetterCount","mobileWidth","desktopWidth","TextField","multiline","rows","autoFocus","placeholder","onChange","onUpdateText","bind","optionsContainer","selectionContainer","FormControl","formControl","InputLabel","Select","onEncryptionTypeChange","Object","keys","map","i","MenuItem","key","encryptionDescription","disabled","onClick","encrypt","results","errorContainer","encryptedContainer","Component","input","maxHeight","display","justifyContent","flexWrap","marginRight","marginBottom","minWidth","alignItems","paddingBottom","textAlign","backgroundColor","Decrypt","App","store","basename","theme","className","exact","path","component","createMuiTheme","palette","primary","main","dark","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","String","prototype","shuffle","a","split","j","Math","floor","tmp","join","isLower","character","isNaN","toLowerCase","isUpper","toUpperCase","module","exports","message","amount","round","alpha","answer","c","indexOf","char","amount1","amount2","val","rand","slice","str","letters","ar"],"mappings":"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","file":"static/js/main.63103f38.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    encodedText: \"\",\r\n    letterMappings: {}\r\n};\r\n\r\nexport default function solverReducer(state=INITIAL_STATE, action) {\r\n    switch(action.type) {\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { createStore, combineReducers } from \"redux\";\r\nimport solverReducer from \"./solver/solverReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    solver: solverReducer\r\n});\r\n\r\nexport default createStore(reducer);\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <div style={styles.title}>\r\n                <span>What would you like to do?</span>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/encrypt\" style={styles.buttonContainer}>\r\n                    <Button variant=\"contained\" color=\"primary\" style={styles.button}>Encrypt a message</Button>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/decrypt\" style={styles.buttonContainer}>\r\n                    <Button variant=\"contained\" color=\"primary\" style={styles.button}>Crack a code</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    buttonContainer: {\r\n        textDecoration:\"none\"\r\n    },\r\n    button: {\r\n        margin: '12px',\r\n        width: '240px'\r\n    },\r\n    title: {\r\n        fontSize: '20px',\r\n        padding: '16px'\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { TextField, Button, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport encryptionUtils from \"../../utils/encryptionUtils\";\r\nimport stringUtils from \"../../utils/stringUtils\";\r\n\r\nexport default class Encrypt extends Component {\r\n    shortLetterCount = 100;\r\n    encryptionTypes = {\r\n        shift: { name: 'Shift', strategy: encryptionUtils.shift, description: '\"Easy, I\\'ve got this.\"' },\r\n        shiftHalf: { name: 'Split Shift', strategy: encryptionUtils.shiftHalf, description: '\"Okay this is pretty hard.\"' },\r\n        random: { name: 'Random', strategy: encryptionUtils.randomize, description: '\"Wtf??\"' }\r\n    };\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            originalText: '',\r\n            width: window.innerWidth,\r\n            selectedEncryption: this.encryptionTypes.shift\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n    \r\n    // make sure to remove the listener\r\n    // when the component is not mounted anymore\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n    \r\n    handleWindowSizeChange = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    onUpdateText(event) {\r\n        this.setState({ originalText: event.target.value });\r\n    }\r\n\r\n    onEncryptionTypeChange(event) {\r\n        this.setState({ selectedEncryption: event.target.value });\r\n    }\r\n\r\n    encrypt() {\r\n        const encryptedText = this.state.selectedEncryption.strategy(this.state.originalText);\r\n        this.setState({ encryptedText });\r\n    }\r\n\r\n    render() {\r\n        const isEmpty = !this.state.originalText || 0 === this.state.originalText.length; \r\n        const isShort = stringUtils.getLetterCount(this.state.originalText) < this.shortLetterCount;\r\n        const width = this.state.width <= 500 ? styles.mobileWidth : styles.desktopWidth;\r\n        \r\n        return (\r\n            <div>\r\n                <div style={styles.title}>\r\n                    <span>Encrypt a message</span>\r\n                </div>\r\n                <TextField \r\n                    style={width} \r\n                    multiline \r\n                    rows=\"10\" \r\n                    autoFocus={true} \r\n                    placeholder=\"paste yer stuff here\" \r\n                    variant=\"outlined\" \r\n                    onChange={this.onUpdateText.bind(this)}/>\r\n\r\n                <div style={{...styles.optionsContainer, ...width}}>\r\n                    <div style={styles.selectionContainer}>\r\n                        <FormControl style={styles.formControl}>\r\n                            <InputLabel>Encryption Type</InputLabel>\r\n                            <Select\r\n                                value={this.state.selectedEncryption}\r\n                                onChange={this.onEncryptionTypeChange.bind(this)}\r\n                            >\r\n                                {Object.keys(this.encryptionTypes).map((type, i) => (\r\n                                    <MenuItem key={i} value={this.encryptionTypes[type]}>{this.encryptionTypes[type].name}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <div style={styles.encryptionDescription}><span>{this.state.selectedEncryption.description}</span></div>\r\n                    </div>\r\n                    <div style={styles.buttonContainer}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            disabled={isEmpty} \r\n                            onClick={this.encrypt.bind(this)}>Encrypt</Button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.encryptedText &&\r\n                    <div style={{...styles.results, ...width}}>\r\n                        <div style={styles.errorContainer}>\r\n                            {\r\n                                isShort && <div><span>Note: messages that are too short tend to be too hard to solve.</span></div>\r\n                            }\r\n                        </div>\r\n                        <div style={styles.encryptedContainer}>\r\n                            <div style={styles.encryptedText}>\r\n                                <span>{this.state.encryptedText}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    desktopWidth: {\r\n        width:'50vw'\r\n    },\r\n    mobileWidth: {\r\n        width:'75vw'\r\n    },\r\n    input: {\r\n        maxHeight: '50vh'\r\n    },\r\n    title: {\r\n        fontSize: '20px',\r\n        padding: '16px'\r\n    },\r\n    optionsContainer: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px'\r\n    },\r\n    selectionContainer: {\r\n        display: 'inline-flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    formControl: {\r\n        marginRight: '8px',\r\n        marginBottom: '8px',\r\n        minWidth: '120px',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    encryptionDescription: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginRight: '8px'\r\n    },\r\n    results: {\r\n        display: 'inline-block',\r\n        paddingBottom: '32px'\r\n    },\r\n    errorContainer: {\r\n        textAlign: 'start',\r\n        padding: '8px',\r\n    },\r\n    encryptedContainer: {\r\n        textAlign: 'start',\r\n    },\r\n    encryptedText: {\r\n        backgroundColor: '#eff0f1',\r\n        padding: '8px'\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Decrypt extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={styles.title}>\r\n                    <span>OMG welcome to the decrypt page!</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title: {\r\n        fontSize: '20px',\r\n        padding: '16px'\r\n    }\r\n}","import React from \"react\";\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport store from \"./redux/store\";\nimport Home from './components/Home';\nimport Encrypt from './components/encrypt/Encrypt';\nimport Decrypt from './components/decrypt/Decrypt';\nimport ThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\n\n\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <HashRouter basename=\"/\">\n                <ThemeProvider theme={theme}>\n                    <div className=\"App\">\n                        <header className=\"App-header\">\n                            <div>\n                                <Link to=\"/\" className=\"App-title\">\n                                    <span>Substitution Cipher - crack a message</span>\n                                </Link>\n                            </div>\n                            <div>\n                                <Link to=\"/\" className=\"App-nav-option\">\n                                    <span>Home</span>\n                                </Link>\n                            </div>\n                            <div>\n                                <Link to=\"/encrypt\" className=\"App-nav-option\">\n                                    <span>Encrypt</span>\n                                </Link>\n                            </div>\n                            <div>\n                                <Link to=\"/decrypt\" className=\"App-nav-option\">\n                                    <span>Decrypt</span>\n                                </Link>\n                            </div>\n                            <div className=\"my-name\">\n                                <span>Jessee Zhang</span>\n                            </div>\n                        </header>\n                        <div className=\"App-body\">\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/encrypt\" component={Encrypt} />\n                            <Route path=\"/decrypt\" component={Decrypt} />\n                        </div>\n                    </div>\n                </ThemeProvider>\n            </HashRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#620235',\n            dark: '#2E0219'\n        }\n    }\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function shift(message) {\r\n\tlet amount = Math.round(Math.random() * 100) % 26;\r\n\t// message = message.toLowerCase();\r\n\tlet alpha = \"abcdefghijklmnopqrstuvwxyz\";\r\n\tvar answer = \"\";\r\n\tfor(var i = 0; i < message.length; i++){\r\n\t\tlet c = message[i].toLowerCase();\r\n\t\tif(alpha.indexOf(c) === -1){\r\n\t\t\tanswer = answer + c;\r\n\t\t} else {\r\n            let isUpper = message[i].isUpper();\r\n            let char = alpha[(alpha.indexOf(c) + 26 + amount)%26];\r\n\t\t\tanswer = answer + (isUpper ? char.toUpperCase() : char);\r\n\t\t}\r\n\t}\r\n\treturn answer;\r\n}\r\n\r\nfunction shiftHalfTest(){\r\n\tlet amount1 = (Math.round(Math.random() * 100) % 12) + 1;\r\n\tlet amount2 = (Math.round(Math.random() * 100) % 12) + 1;\r\n\tlet split = Math.round(Math.random() * 100) % 26;\r\n\r\n\tconsole.log(amount1);\r\n\tconsole.log(amount2);\r\n\tconsole.log(split);\r\n\r\n\r\n\tvar a = [];\r\n\tfor(var i = 0; i < 26; i++) {\r\n\t\ta[i] = i;\r\n\t}\r\n\r\n\tfor(var i = 0; i < 26; i++) {\r\n\t\tvar val = i;\r\n\t\tif(split < 13) {\r\n\t\t\tif(i < split || i > split + 12) {\r\n\t\t\t\t//block1\r\n\t\t\t\tval = (val + amount1) % 26;\r\n\t\t\t\tif(val >= split && val < split + 13) {\r\n\t\t\t\t\t//in block2\r\n\t\t\t\t\tval = (val + 13) % 26;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//block2\r\n\t\t\t\tval = (val + amount2) % 26;\r\n\t\t\t\tif(val < split || val > split + 12) {\r\n\t\t\t\t\tval = (val + 13) % 26;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(i < split && i >= split - 13) {\r\n\t\t\t\t//block1\r\n\t\t\t\tval = (val + amount1) % 26;\r\n\t\t\t\tif(val >= split || val < split - 13) {\r\n\t\t\t\t\tval = (val + 13) %  26;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//block2\r\n\t\t\t\tval = (val + amount2) % 26;\r\n\t\t\t\tif(val < split && val >= split - 13) {\r\n\t\t\t\t\tval = (val + 13) % 26;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ta[i] = val;\r\n\t}\r\n\r\n\treturn a;\r\n}\r\n\r\nfunction shiftHalf(message) {\r\n\tmessage = message.toLowerCase();\r\n\tlet amount1 = (Math.round(Math.random() * 100) % 12) + 1;\r\n\tlet amount2 = (Math.round(Math.random() * 100) % 12) + 1;\r\n\tlet split = Math.round(Math.random() * 100) % 26;\r\n\r\n\tvar map = [];\r\n\tfor(var i = 0; i < 26; i++) {\r\n\t\tmap[i] = i;\r\n\t}\r\n\r\n\tfor(var i = 0; i < 26; i++) {\r\n\t\tvar val = i;\r\n\t\tif(split < 13) {\r\n\t\t\tif(i < split || i > split + 12) {\r\n\t\t\t\t//block1\r\n\t\t\t\tval = (val + amount1) % 26;\r\n\t\t\t\tif(val >= split && val < split + 13) {\r\n\t\t\t\t\t//in block2\r\n\t\t\t\t\tval = (val + 13) % 26;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//block2\r\n\t\t\t\tval = (val + amount2) % 26;\r\n\t\t\t\tif(val < split || val > split + 12) {\r\n\t\t\t\t\tval = (val + 13) % 26;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(i < split && i >= split - 13) {\r\n\t\t\t\t//block1\r\n\t\t\t\tval = (val + amount1) % 26;\r\n\t\t\t\tif(val >= split || val < split - 13) {\r\n\t\t\t\t\tval = (val + 13) %  26;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//block2\r\n\t\t\t\tval = (val + amount2) % 26;\r\n\t\t\t\tif(val < split && val >= split - 13) {\r\n\t\t\t\t\tval = (val + 13) % 26;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tmap[i] = val;\r\n\t}\r\n\r\n\r\n\tlet alpha = \"abcdefghijklmnopqrstuvwxyz\";\r\n\tvar answer = \"\";\r\n\r\n\tfor(var i = 0; i < message.length; i++){\r\n\t\tlet c = message[i];\r\n\t\tif(alpha.indexOf(c) === -1){\r\n\t\t\tanswer = answer + c;\r\n\t\t} else {\r\n            let isUpper = message[i].isUpper();\r\n            let char = alpha[map[alpha.indexOf(c)]];\r\n\t\t\tanswer = answer + (isUpper ? char.toUpperCase() : char);\r\n\t\t}\r\n\t}\r\n\treturn answer;\r\n}\r\n\r\nString.prototype.shuffle = function () {\r\n    var a = this.split(\"\"),\r\n        n = a.length;\r\n\r\n    for(var i = n - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var tmp = a[i];\r\n        a[i] = a[j];\r\n        a[j] = tmp;\r\n    }\r\n    return a.join(\"\");\r\n}\r\n\r\nString.prototype.isLower = function() {\r\n    let character = this[0];\r\n    if (!isNaN(character * 1)){\r\n        return false;\r\n    } else {\r\n        return character === character.toLowerCase();\r\n    }\r\n}\r\n\r\nString.prototype.isUpper = function() {\r\n    let character = this[0];\r\n    if (!isNaN(character * 1)){\r\n        return false;\r\n    } else {\r\n        return character === character.toUpperCase();\r\n    }\r\n}\r\n\r\nfunction randomize(message) {\r\n\tmessage = message.toLowerCase();\r\n\tlet alpha = \"abcdefghijklmnopqrstuvwxyz\";\r\n\tlet rand = alpha.slice().shuffle();\r\n\tvar answer = \"\";\r\n\tfor(var i = 0; i < message.length; i++){\r\n\t\tlet c = message[i];\r\n\t\tif(alpha.indexOf(c) === -1){\r\n\t\t\tanswer = answer + c;\r\n\t\t} else {\r\n            let isUpper = message[i].isUpper();\r\n            let char = rand[alpha.indexOf(c)];\r\n\t\t\tanswer = answer + (isUpper ? char.toUpperCase() : char);\r\n\t\t}\r\n\t}\r\n\treturn answer;\r\n}\r\n\r\nmodule.exports = {\r\n    shift, shiftHalf, randomize\r\n};","const alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nfunction getLetterCount(str) {\r\n    var letters = 0;\r\n    var ar = alphabet.split(\"\");\r\n    for (var i=0; i<str.length;i++) {\r\n        if (ar.indexOf(str[i]) > -1) {\r\n            letters = letters + 1;\r\n        }\r\n    }\r\n    return letters;\r\n}\r\n\r\nmodule.exports = {\r\n    getLetterCount\r\n}"],"sourceRoot":""}