{"version":3,"sources":["components/Home.js","components/encrypt/Encrypt.js","components/decrypt/Decrypt.js","App.js","serviceWorker.js","index.js","utils/stringUtils.js","utils/encryptionUtils.js"],"names":["Home","style","styles","title","to","buttonContainer","Button","variant","color","button","textDecoration","margin","width","fontSize","padding","Encrypt","shortLetterCount","encryptionTypes","shift","name","strategy","encryptionUtils","description","shiftHalf","random","randomize","tooShortMessage","handleWindowSizeChange","setState","window","innerWidth","state","originalText","selectedEncryption","snackbarOpen","addEventListener","this","removeEventListener","event","target","value","encryptedText","navigator","clipboard","writeText","isEmpty","length","isShort","stringUtils","getLetterCount","mobileWidth","desktopWidth","TextField","multiline","rows","autoFocus","placeholder","onChange","onUpdateText","bind","optionsContainer","selectionContainer","FormControl","formControl","InputLabel","Select","onEncryptionTypeChange","Object","keys","map","type","i","MenuItem","key","encryptionDescription","disabled","onClick","encrypt","results","errorContainer","encryptedContainer","onCopy","Snackbar","anchorOrigin","snackbar","open","onClose","onSnackbarClose","message","autoHideDuration","Component","input","maxHeight","display","justifyContent","flexWrap","marginRight","marginBottom","minWidth","alignItems","paddingBottom","textAlign","backgroundColor","paddingLeft","overflowWrap","Decrypt","letterMap","Map","text","split","p","renderParagraph","paragraph","w","renderWord","trim","word","x","isLetter","renderLetter","toLowerCase","symbol","letter","translation","toUpperCase","label","letterInputProps","inputProps","letterInputInputProps","InputLabelProps","letterInputLabelProps","getOnLetterChange","index","c","isUpper","translateMessage","inputWidth","decryptWidth","decrypt","distinctLetters","Set","filter","isSolved","values","onUpdateEncryptedText","decryptContainer","renderText","decryptedMessage","decryptedTextContainer","decryptedText","paddingRight","shrink","flex","height","paddingTop","overflowX","marginTop","vertical","horizontal","App","basename","theme","className","exact","path","component","createMuiTheme","palette","primary","main","dark","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","alphabet","module","exports","str","letters","ar","indexOf","string","includes","String","prototype","shuffle","a","j","Math","floor","tmp","join","isLower","character","isNaN","amount","round","alpha","answer","char","amount1","amount2","val","rand","slice"],"mappings":"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","file":"static/js/main.3af3e00a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <div style={styles.title}>\r\n                <span>What would you like to do?</span>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/encrypt\" style={styles.buttonContainer}>\r\n                    <Button variant=\"contained\" color=\"primary\" style={styles.button}>Encrypt a message</Button>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/decrypt\" style={styles.buttonContainer}>\r\n                    <Button variant=\"contained\" color=\"primary\" style={styles.button}>Crack a code</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    buttonContainer: {\r\n        textDecoration:\"none\"\r\n    },\r\n    button: {\r\n        margin: '12px',\r\n        width: '240px'\r\n    },\r\n    title: {\r\n        fontSize: '20px',\r\n        padding: '16px'\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { TextField, Button, FormControl, InputLabel, Select, MenuItem, Snackbar } from \"@material-ui/core\";\r\nimport encryptionUtils from \"../../utils/encryptionUtils\";\r\nimport stringUtils from \"../../utils/stringUtils\";\r\n\r\nexport default class Encrypt extends Component {\r\n    shortLetterCount = 100;\r\n    encryptionTypes = {\r\n        shift: { name: 'Shift', strategy: encryptionUtils.shift, description: '\"Easy, I\\'ve got this.\"' },\r\n        shiftHalf: { name: 'Split Shift', strategy: encryptionUtils.shiftHalf, description: '\"Okay this is pretty hard.\"' },\r\n        random: { name: 'Random', strategy: encryptionUtils.randomize, description: '\"Wtf??\"' }\r\n    };\r\n    tooShortMessage = \"Note: messages that are too short tend to be too hard to solve. For best results, type longer messages.\";\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            originalText: '',\r\n            width: window.innerWidth,\r\n            selectedEncryption: this.encryptionTypes.shift,\r\n            snackbarOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n    \r\n    // make sure to remove the listener\r\n    // when the component is not mounted anymore\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n    \r\n    handleWindowSizeChange = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    onUpdateText(event) {\r\n        this.setState({ originalText: event.target.value });\r\n    }\r\n\r\n    onEncryptionTypeChange(event) {\r\n        this.setState({ selectedEncryption: event.target.value });\r\n    }\r\n\r\n    encrypt() {\r\n        const encryptedText = this.state.selectedEncryption.strategy(this.state.originalText);\r\n        this.setState({ encryptedText });\r\n    }\r\n\r\n    onSnackbarClose() {\r\n        this.setState({ snackbarOpen: false });\r\n    }\r\n\r\n    onCopy() {\r\n        navigator.clipboard.writeText(this.state.encryptedText)\r\n        this.setState({ snackbarOpen: true });\r\n    }\r\n    \r\n    render() {\r\n        const isEmpty = !this.state.originalText || 0 === this.state.originalText.length; \r\n        const isShort = stringUtils.getLetterCount(this.state.originalText) < this.shortLetterCount;\r\n        const width = this.state.width <= 500 ? styles.mobileWidth : styles.desktopWidth;\r\n        \r\n        return (\r\n            <div>\r\n                <div style={styles.title}>\r\n                    <span>Encrypt a message</span>\r\n                </div>\r\n                <TextField \r\n                    style={width} \r\n                    multiline \r\n                    rows=\"10\" \r\n                    autoFocus={true} \r\n                    placeholder=\"Enter your message here\" \r\n                    variant=\"outlined\" \r\n                    onChange={this.onUpdateText.bind(this)}/>\r\n\r\n                <div style={{...styles.optionsContainer, ...width}}>\r\n                    <div style={styles.selectionContainer}>\r\n                        <FormControl style={styles.formControl}>\r\n                            <InputLabel>Encryption Type</InputLabel>\r\n                            <Select\r\n                                value={this.state.selectedEncryption}\r\n                                onChange={this.onEncryptionTypeChange.bind(this)}\r\n                            >\r\n                                {Object.keys(this.encryptionTypes).map((type, i) => (\r\n                                    <MenuItem key={i} value={this.encryptionTypes[type]}>{this.encryptionTypes[type].name}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <div style={styles.encryptionDescription}><span>{this.state.selectedEncryption.description}</span></div>\r\n                    </div>\r\n                    <div style={styles.buttonContainer}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            disabled={isEmpty} \r\n                            onClick={this.encrypt.bind(this)}>Encrypt</Button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.encryptedText &&\r\n                    <div style={{...styles.results, ...width}}>\r\n                        <div style={styles.errorContainer}>\r\n                            {\r\n                                isShort && <div><span>{this.tooShortMessage}</span></div>\r\n                            }\r\n                        </div>\r\n                        <div style={styles.encryptedContainer}>\r\n                            <div style={styles.encryptedText}>\r\n                                <span>{this.state.encryptedText}</span>\r\n                            </div>\r\n                        </div>\r\n                        <Button \r\n                            variant='contained' \r\n                            color='primary' \r\n                            onClick={this.onCopy.bind(this)}\r\n                        >\r\n                            Copy\r\n                        </Button>\r\n                    </div>\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={styles.snackbar}\r\n                    open={this.state.snackbarOpen}\r\n                    onClose={this.onSnackbarClose.bind(this)}\r\n                    message='Copied!'\r\n                    autoHideDuration={2000}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    desktopWidth: {\r\n        width:'50vw'\r\n    },\r\n    mobileWidth: {\r\n        width:'75vw'\r\n    },\r\n    input: {\r\n        maxHeight: '50vh'\r\n    },\r\n    title: {\r\n        fontSize: '20px',\r\n        padding: '16px'\r\n    },\r\n    optionsContainer: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px'\r\n    },\r\n    selectionContainer: {\r\n        display: 'inline-flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    formControl: {\r\n        marginRight: '8px',\r\n        marginBottom: '8px',\r\n        minWidth: '120px',\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    encryptionDescription: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginRight: '8px'\r\n    },\r\n    results: {\r\n        display: 'inline-block',\r\n        paddingBottom: '32px'\r\n    },\r\n    errorContainer: {\r\n        textAlign: 'start',\r\n        padding: '8px',\r\n    },\r\n    encryptedContainer: {\r\n        textAlign: 'start',\r\n    },\r\n    encryptedText: {\r\n        marginBottom: '8px',\r\n        backgroundColor: '#eff0f1',\r\n        padding: '8px',\r\n        paddingLeft: '16px',\r\n        overflowWrap: 'break-word'\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { TextField, Button, Snackbar } from \"@material-ui/core\";\r\nimport stringUtils from \"../../utils/stringUtils\";\r\n\r\nexport default class Decrypt extends Component {\r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            encryptedText: '',\r\n            width: window.innerWidth,\r\n            letterMap: new Map(),\r\n            snackbarOpen: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.addEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n    \r\n    // make sure to remove the listener\r\n    // when the component is not mounted anymore\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    }\r\n    \r\n    handleWindowSizeChange = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    onUpdateEncryptedText(event) {\r\n        this.setState({ encryptedText: event.target.value });\r\n    }\r\n\r\n    renderText(text) {\r\n        return text.split('\\n').map((p, i) => this.renderParagraph(p, i));\r\n    }\r\n\r\n    renderParagraph(paragraph, key) {\r\n        if(paragraph) {\r\n            return (\r\n                <div key={key} style={styles.paragraph}>\r\n                    {paragraph.split(/(\\s+)/).map((w, i) => this.renderWord(w.trim(), i))}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderWord(word, key) {\r\n        if(word) {\r\n            return(\r\n                <div key={key} style={styles.word}>\r\n                    {\r\n                        word.split('').map((x, i) =>\r\n                            stringUtils.isLetter(x)\r\n                                ? this.renderLetter(x.trim(), this.state.letterMap[x.toLowerCase()], i)\r\n                                : <div key={i} style={styles.symbol}><span>{x}</span></div>\r\n                        )\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderLetter(letter, translation, key) {\r\n        if (translation) {\r\n            translation = letter === letter.toUpperCase() ? translation.toUpperCase() : translation;\r\n        }\r\n        \r\n        return <TextField \r\n                    key={key}\r\n                    label={letter} \r\n                    value={translation || ''} \r\n                    variant=\"outlined\" \r\n                    style={styles.letterInputProps} \r\n                    inputProps={styles.letterInputInputProps}\r\n                    InputLabelProps={styles.letterInputLabelProps}\r\n                    onChange={this.getOnLetterChange(letter).bind(this)}\r\n                />;\r\n    }\r\n\r\n    getOnLetterChange(letter) {\r\n        return (event) => {\r\n            const {value} = event.target;\r\n            var index = value.length - 1;\r\n            while(index >= 0 && !stringUtils.isLetter(value[index])) {\r\n                index--;\r\n            }\r\n\r\n            const map = this.state.letterMap;\r\n            map[letter.toLowerCase()] = index >= 0 ? value[index].toLowerCase() : '';\r\n            this.setState({ letterMap: map });\r\n        };\r\n    }\r\n\r\n    translateMessage() {\r\n        var message = '';\r\n        const {encryptedText, letterMap} = this.state;\r\n\r\n        for(var i = 0; i < encryptedText.length; i++) {\r\n            var c = encryptedText[i];\r\n            const isUpper = c === c.toUpperCase();\r\n            if(stringUtils.isLetter(c)) {\r\n                message += isUpper ? letterMap[c.toLowerCase()].toUpperCase() : letterMap[c.toLowerCase()];\r\n            } else {\r\n                message += c;\r\n            }\r\n        }\r\n        return message;\r\n    }\r\n\r\n    onSnackbarClose() {\r\n        this.setState({ snackbarOpen: false });\r\n    }\r\n\r\n    onCopy() {\r\n        navigator.clipboard.writeText(this.translateMessage())\r\n        this.setState({ snackbarOpen: true });\r\n    }\r\n\r\n    render() {\r\n        const width = this.state.width <= 500 ? styles.mobileWidth : styles.desktopWidth;\r\n        const inputWidth = width.input;\r\n        const decryptWidth = width.decrypt;\r\n        const distinctLetters = [...new Set(this.state.encryptedText.toLowerCase())].filter(stringUtils.isLetter);\r\n        const isSolved = distinctLetters.length > 0 && distinctLetters.length === Object.values(this.state.letterMap).length;\r\n\r\n        return (\r\n            <div>\r\n                <div style={styles.title}>\r\n                    <span>Decrypt a message</span>\r\n                </div>\r\n                <TextField \r\n                    style={inputWidth} \r\n                    multiline \r\n                    rows=\"10\" \r\n                    autoFocus={true} \r\n                    placeholder=\"Enter the encrypted message here\" \r\n                    variant=\"outlined\" \r\n                    onChange={this.onUpdateEncryptedText.bind(this)}/>\r\n\r\n                <div style={{...styles.decryptContainer, ...decryptWidth}}>\r\n                    <div>\r\n                        {this.renderText(this.state.encryptedText)}\r\n                    </div>\r\n                </div>\r\n                <div style={{...styles.decryptedMessage, ...inputWidth}}>\r\n                    { isSolved &&\r\n                        <div>\r\n                            <div><span>Your decrypted message:</span></div>\r\n                            <div style={styles.decryptedTextContainer}>\r\n                                <div style={styles.decryptedText}>\r\n                                    {this.translateMessage()}\r\n                                </div>\r\n                            </div>\r\n                            <Button \r\n                                variant='contained' \r\n                                color='primary' \r\n                                onClick={this.onCopy.bind(this)}\r\n                            >\r\n                                Copy\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    </div>\r\n                <Snackbar\r\n                    anchorOrigin={styles.snackbar}\r\n                    open={this.state.snackbarOpen}\r\n                    onClose={this.onSnackbarClose.bind(this)}\r\n                    message='Copied!'\r\n                    autoHideDuration={2000}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    desktopWidth: {\r\n        input: {\r\n            width:'50vw'\r\n        },\r\n        decrypt: {\r\n            width:'65vw'\r\n        }\r\n    },\r\n    mobileWidth: {\r\n        input: {\r\n            width:'75vw'\r\n        },\r\n        decrypt: {\r\n            width:'85vw'\r\n        }\r\n    },\r\n    input: {\r\n        maxHeight: '50vh'\r\n    },\r\n    title: {\r\n        fontSize: '20px',\r\n        padding: '16px'\r\n    },\r\n    letterInputProps: {\r\n        width: '34px',\r\n        textAlign: 'center'\r\n    },\r\n    letterInputInputProps: {\r\n        style: {\r\n            textAlign: 'center',\r\n            paddingLeft: '0px',\r\n            paddingRight:'0px'\r\n        }\r\n    },\r\n    letterInputLabelProps: {\r\n        shrink: true\r\n    },\r\n    paragraph: {\r\n        display: 'inline-flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    word: {\r\n        flex: 'none',\r\n        padding: '16px',\r\n        paddingLeft: '0px',\r\n        paddingRight: '16px'\r\n    },\r\n    symbol: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        paddingLeft: '4px',\r\n        paddingRight: '4px',\r\n        fontSize: '20px'\r\n    },\r\n    decryptContainer: {\r\n        display: 'inline-block',\r\n        paddingBottom: '32px',\r\n        paddingTop: '32px',\r\n        overflowX: 'auto',\r\n        marginTop: '32px',\r\n        marginBottom: '32px'\r\n    },\r\n    decryptedTextContainer: {\r\n        textAlign: 'start'\r\n    },\r\n    decryptedText: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px',\r\n        backgroundColor: '#eff0f1',\r\n        padding: '8px',\r\n        paddingLeft: '16px'\r\n    },\r\n    decryptedMessage: {\r\n        padding: '16px',\r\n        display: 'inline-block',\r\n        overflowWrap: 'break-word'\r\n    },\r\n    snackbar: {\r\n        vertical: 'bottom',\r\n        horizontal: 'center'\r\n    }\r\n}","import React from \"react\";\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport \"./App.css\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Home from './components/Home';\nimport Encrypt from './components/encrypt/Encrypt';\nimport Decrypt from './components/decrypt/Decrypt';\nimport ThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\n\n\n\nfunction App() {\n    return (\n        <HashRouter basename=\"/\">\n            <ThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <div>\n                            <Link to=\"/\" className=\"App-title\">\n                                <span>Substitution Cipher</span>\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to=\"/\" className=\"App-nav-option\">\n                                <span>Home</span>\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to=\"/encrypt\" className=\"App-nav-option\">\n                                <span>Encrypt</span>\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to=\"/decrypt\" className=\"App-nav-option\">\n                                <span>Decrypt</span>\n                            </Link>\n                        </div>\n                        <div className=\"my-name\">\n                            <span>Jessee Zhang</span>\n                        </div>\n                    </header>\n                    <div className=\"App-body\">\n                        <Route exact path=\"/\" component={Home} />\n                        <Route path=\"/encrypt\" component={Encrypt} />\n                        <Route path=\"/decrypt\" component={Decrypt} />\n                    </div>\n                </div>\n            </ThemeProvider>\n        </HashRouter>\n    );\n}\n\nexport default App;\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#620235',\n            dark: '#2E0219'\n        }\n    }\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nfunction getLetterCount(str) {\r\n    var letters = 0;\r\n    var ar = alphabet.split(\"\");\r\n    for (var i=0; i<str.length;i++) {\r\n        if (ar.indexOf(str[i]) > -1) {\r\n            letters = letters + 1;\r\n        }\r\n    }\r\n    return letters;\r\n}\r\n\r\nfunction isLetter(string) {\r\n    if(string && string.length > 0) {\r\n        return alphabet.includes(string[0]);\r\n    }\r\n    return false;\r\n}\r\n\r\nmodule.exports = {\r\n    getLetterCount,\r\n    isLetter\r\n}","function shift(message) {\r\n    let amount = Math.round(Math.random() * 100) % 26;\r\n    let alpha = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var answer = \"\";\r\n    for(var i = 0; i < message.length; i++){\r\n        let c = message[i].toLowerCase();\r\n        if(alpha.indexOf(c) === -1){\r\n            answer = answer + c;\r\n        } else {\r\n            let isUpper = message[i].isUpper();\r\n            let char = alpha[(alpha.indexOf(c) + 26 + amount)%26];\r\n            answer = answer + (isUpper ? char.toUpperCase() : char);\r\n        }\r\n    }\r\n    return answer;\r\n}\r\n\r\nfunction shiftHalfTest(){\r\n    let amount1 = (Math.round(Math.random() * 100) % 12) + 1;\r\n    let amount2 = (Math.round(Math.random() * 100) % 12) + 1;\r\n    let split = Math.round(Math.random() * 100) % 26;\r\n\r\n    console.log(amount1);\r\n    console.log(amount2);\r\n    console.log(split);\r\n\r\n\r\n    var a = [];\r\n    for(var i = 0; i < 26; i++) {\r\n        a[i] = i;\r\n    }\r\n\r\n    for(var i = 0; i < 26; i++) {\r\n        var val = i;\r\n        if(split < 13) {\r\n            if(i < split || i > split + 12) {\r\n                //block1\r\n                val = (val + amount1) % 26;\r\n                if(val >= split && val < split + 13) {\r\n                    //in block2\r\n                    val = (val + 13) % 26;\r\n                }\r\n            } else {\r\n                //block2\r\n                val = (val + amount2) % 26;\r\n                if(val < split || val > split + 12) {\r\n                    val = (val + 13) % 26;\r\n                }\r\n            }\r\n        } else {\r\n            if(i < split && i >= split - 13) {\r\n                //block1\r\n                val = (val + amount1) % 26;\r\n                if(val >= split || val < split - 13) {\r\n                    val = (val + 13) %  26;\r\n                }\r\n            } else {\r\n                //block2\r\n                val = (val + amount2) % 26;\r\n                if(val < split && val >= split - 13) {\r\n                    val = (val + 13) % 26;\r\n                }\r\n            }\r\n        }\r\n        a[i] = val;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nfunction shiftHalf(message) {\r\n    let amount1 = (Math.round(Math.random() * 100) % 12) + 1;\r\n    let amount2 = (Math.round(Math.random() * 100) % 12) + 1;\r\n    let split = Math.round(Math.random() * 100) % 26;\r\n\r\n    var map = [];\r\n    for(var i = 0; i < 26; i++) {\r\n        map[i] = i;\r\n    }\r\n\r\n    for(var i = 0; i < 26; i++) {\r\n        var val = i;\r\n        if(split < 13) {\r\n            if(i < split || i > split + 12) {\r\n                //block1\r\n                val = (val + amount1) % 26;\r\n                if(val >= split && val < split + 13) {\r\n                    //in block2\r\n                    val = (val + 13) % 26;\r\n                }\r\n            } else {\r\n                //block2\r\n                val = (val + amount2) % 26;\r\n                if(val < split || val > split + 12) {\r\n                    val = (val + 13) % 26;\r\n                }\r\n            }\r\n        } else {\r\n            if(i < split && i >= split - 13) {\r\n                //block1\r\n                val = (val + amount1) % 26;\r\n                if(val >= split || val < split - 13) {\r\n                    val = (val + 13) %  26;\r\n                }\r\n            } else {\r\n                //block2\r\n                val = (val + amount2) % 26;\r\n                if(val < split && val >= split - 13) {\r\n                    val = (val + 13) % 26;\r\n                }\r\n            }\r\n        }\r\n        map[i] = val;\r\n    }\r\n\r\n\r\n    let alpha = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var answer = \"\";\r\n\r\n    for(var i = 0; i < message.length; i++){\r\n        let c = message[i].toLowerCase();\r\n        if(alpha.indexOf(c) === -1){\r\n            answer = answer + c;\r\n        } else {\r\n            let isUpper = message[i].isUpper();\r\n            let char = alpha[map[alpha.indexOf(c)]];\r\n            answer = answer + (isUpper ? char.toUpperCase() : char);\r\n        }\r\n    }\r\n    return answer;\r\n}\r\n\r\nString.prototype.shuffle = function () {\r\n    var a = this.split(\"\"),\r\n        n = a.length;\r\n\r\n    for(var i = n - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var tmp = a[i];\r\n        a[i] = a[j];\r\n        a[j] = tmp;\r\n    }\r\n    return a.join(\"\");\r\n}\r\n\r\nString.prototype.isLower = function() {\r\n    let character = this[0];\r\n    if (!isNaN(character * 1)){\r\n        return false;\r\n    } else {\r\n        return character === character.toLowerCase();\r\n    }\r\n}\r\n\r\nString.prototype.isUpper = function() {\r\n    let character = this[0];\r\n    if (!isNaN(character * 1)){\r\n        return false;\r\n    } else {\r\n        return character === character.toUpperCase();\r\n    }\r\n}\r\n\r\nfunction randomize(message) {\r\n    let alpha = \"abcdefghijklmnopqrstuvwxyz\";\r\n    let rand = alpha.slice().shuffle();\r\n    var answer = \"\";\r\n    for(var i = 0; i < message.length; i++){\r\n        let c = message[i].toLowerCase();\r\n        if(alpha.indexOf(c) === -1){\r\n            answer = answer + c;\r\n        } else {\r\n            let isUpper = message[i].isUpper();\r\n            let char = rand[alpha.indexOf(c)];\r\n            answer = answer + (isUpper ? char.toUpperCase() : char);\r\n        }\r\n    }\r\n    return answer;\r\n}\r\n\r\nmodule.exports = {\r\n    shift, shiftHalf, randomize\r\n};"],"sourceRoot":""}